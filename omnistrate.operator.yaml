# yaml-language-server: $schema=https://api.omnistrate.cloud/2022-09-01-00/schema/service-spec-schema.json
name: FalkorDB Operator
deployment:
  hostedDeployment:
    GcpProjectId: "$GcpProjectId"
    GcpProjectNumber: "$GcpProjectNumber"
    GcpServiceAccountEmail: "$GcpServiceAccountEmail"
    AwsAccountId: "$AwsAccountId"
    AwsBootstrapRoleAccountArn: "$AwsBootstrapRoleAccountArn"

services:
  - name: cluster-mz
    capabilities:
      enableMultiZone: true
    compute:
      instanceTypes:
        - cloudProvider: aws
          apiParam: nodeInstanceType
        - cloudProvider: gcp
          apiParam: nodeInstanceType
    network:
      ports:
        - 6379
        - 16379
    endpointConfiguration:
      cluster:
        host: "$sys.network.externalClusterEndpoint"
        ports:
          - 6379
        primary: true
        networkingType: PUBLIC
    operatorCRDConfiguration:
      template: |
        apiVersion: redis.redis.opstreelabs.in/v1beta2
        kind: RedisCluster
        metadata:
          name: {{ $var.name }}
          labels:
            app.kubernetes.io/name: {{ $var.name }}
            helm.sh/chart: cluster-0.16.8
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/instance: {{ $var.name }}
            app.kubernetes.io/version: 0.16.5
            app.kubernetes.io/component: middleware
          annotations:
            redisclusters.redis.redis.opstreelabs.in/role-anti-affinity: "true"
            redisclusters.redis.redis.opstreelabs.in/role-anti-affinity-topology-key: "topology.kubernetes.io/zone"
          
        spec:
          hostPort: 6379
          clusterSize: 3
          persistenceEnabled: true
          clusterVersion: v7
          redisLeader:
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh liveness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh readiness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            affinity: 
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
                    - key: topology.kubernetes.io/region
                      operator: In
                      values:
                      - {{$sys.deploymentCell.region}}
                    - key: node.kubernetes.io/instance-type
                      operator: In
                      values:
                      - {{$var.nodeInstanceType}}
                    - key: omnistrate.com/resource
                      operator: In
                      values:
                      - {{$sys.deployment.resourceID}}
            topologySpreadConstraints:
              - maxSkew: 1
                minDomains: 3
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: DoNotSchedule
                labelSelector:
                  matchLabels:
                    role: leader
            replicas: {{ $var.masterCount }}
            redisConfig:
              additionalRedisConfig: "{{ $var.name }}-ext-config"
          
          redisFollower:
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh liveness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh readiness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            affinity: 
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
                    - key: topology.kubernetes.io/region
                      operator: In
                      values:
                      - {{$sys.deploymentCell.region}}
                    - key: node.kubernetes.io/instance-type
                      operator: In
                      values:
                      - {{$var.nodeInstanceType}}
                    - key: omnistrate.com/resource
                      operator: In
                      values:
                      - {{$sys.deployment.resourceID}}
            replicas: {{ $var.replicaCount }}
            redisConfig:
              additionalRedisConfig: "{{ $var.name }}-ext-config"

          redisExporter:
            enabled: true
            image: "falkordb/redis_exporter:v1.68.0"
            imagePullPolicy: "IfNotPresent"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 100m
                memory: 128Mi
            env:
              - name: REDIS_EXPORTER_TLS_CA_CERT_FILE
                value: "/ca/ca.crt"
            
          kubernetesConfig:
            image: "falkordb/redis:latest"
            imagePullPolicy: "IfNotPresent"
            redisSecret:
              name: "redis-secret"
              key: "password"
          storage:
            volumeMount:
              volume:
                - name: ca-certificate
                  secret:
                    secretName: "ca-cert"
              mountPath:
                - mountPath: "/ca"
                  name: "ca-certificate"
                  readOnly: true
            nodeConfVolume: true
            nodeConfVolumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          podSecurityContext: 
            fsGroup: 1000
            runAsUser: 1000
          acl:
            secret:
              secretName: "cluster-acl"
          TLS:
            enabled: {{ $var.enableTLS }}
            ca: "/ca/ca.crt"
            cert: "tls.crt"
            key: "tls.key"
            secret:
              secretName: "falkordb-tls-secret"
          env:
            - name: POD_HOSTNAME
              value: {{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
            - name: TLS_MODE
              value: "{{ $var.enableTLS }}"
            - name: REDIS_TIMEOUT_SECONDS
              value: "5"
            - name: REDIS_TLS_CA_KEY
              value: "/ca/ca.crt"

      supplementalFiles:
        - |
          apiVersion: v1
          stringData:
            password: {{ $var.replicationPassword }}
          kind: Secret
          metadata:
            name: redis-secret
            namespace: {{$sys.id}}
          type: Opaque

        - |
          apiVersion: v1
          stringData:
            user.acl: |
              user {{ $var.falkordbUser }} on >{{ $var.falkordbPassword }} ~* +INFO +CLIENT +DBSIZE +PING +HELLO +AUTH +RESTORE +DUMP +DEL +EXISTS +UNLINK +TYPE +FLUSHALL +TOUCH +EXPIRE +PEXPIREAT +TTL +PTTL +EXPIRETIME +RENAME +RENAMENX +SCAN +DISCARD +EXEC +MULTI +UNWATCH +WATCH +ECHO +SLOWLOG +WAIT +WAITAOF +GRAPH.INFO +GRAPH.LIST +GRAPH.QUERY +GRAPH.RO_QUERY +GRAPH.EXPLAIN +GRAPH.PROFILE +GRAPH.DELETE +GRAPH.CONSTRAINT +GRAPH.SLOWLOG +GRAPH.BULK +GRAPH.CONFIG +CLUSTER +COMMAND
              user default on >{{ $var.replicationPassword }} allchannels +multi +slaveof +ping +exec +subscribe +config|rewrite +role +publish +info +client|setname +client|kill +script|kill +psync +replconf +ping +cluster +dbsize
              user admin on >{{ $var.adminPassword }} ~* +@all
          kind: Secret
          metadata:
            name: cluster-acl
            namespace: {{$sys.id}}
          type: Opaque

        - |
          apiVersion: v1
          data:
            ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          kind: Secret
          metadata:
            name: ca-cert
            namespace: {{$sys.id}}
          type: Opaque
        - |
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: redis-tls
            namespace: {{$sys.id}}
          spec:
            secretName: falkordb-tls-secret
            duration:  2160h # 90d
            renewBefore: 360h # 15d
            issuerRef:
              name: letsencrypt-prod
              kind: ClusterIssuer
            dnsNames:
              - "*.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud"
        
        - |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: {{ $var.name }}-ext-config
            namespace: {{$sys.id}}
            labels:
              app.kubernetes.io/name: {{ $var.name }}
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: {{ $var.name }}
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          data:
            redis-additional.conf: |
              loadmodule /FalkorDB/bin/src/falkordb.so CACHE_SIZE {{ $var.falkorDBCacheSize }} NODE_CREATION_BUFFER {{$var.falkorDBNodeCreationBuffer }} MAX_QUEUED_QUERIES {{$var.falkorDBMaxQueuedQueries}} TIMEOUT_MAX {{ $var.falkorDBTimeoutMax }} TIMEOUT_DEFAULT {{$var.falkorDBTimeoutDefault }} RESULTSET_SIZE {{$var.falkorDBResultSetSize }} QUERY_MEM_CAPACITY {{$var.falkorDBQueryMemCapacity }} VKEY_MAX_ENTITY_COUNT	4611686000000000000
              tls-auth-clients no
              tls-ca-cert-file /ca/ca.crt
              masterauth {{ $var.replicationPassword }}
              masteruser "default"
              cluster-preferred-endpoint-type hostname
              enable-debug-command {{ $var.enableDebugCommand }}
              rename-command FLUSHALL ""
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: redis-cluster-leader-external-service
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{$sys.network.externalClusterEndpoint}}
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              redis_setup_type: cluster
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-0
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-0.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-0
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-1
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-1.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-1
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-2
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-2.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-2
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-0
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-0.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-0
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-1
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-1.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-1
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-2
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-2.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-2
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
      readinessConditions:
        "$var._crd.status.state": "Ready"
      outputParameters:
        "Status": "$var._crd.status.state"
      helmChartDependencies:
        - chartName: operator
          chartVersion: 0.20.1
          chartRepoName: falkordb-helm
          chartRepoURL: "https://falkordb.github.io/helm-charts/"
          chartValues:
            resources:
              limits:
                cpu: "1"
                memory: 500Mi
              requests:
                cpu: "2"
                memory: 2000Mi
            redisOperator:
              webhook: true
            certmanager:
              enabled: true
            service:
              name: webhook-service
              namespace: default


    apiParameters:
      - key: name
        description: Name of the database
        name: Database Name
        type: String
        modifiable: true
        required: true
        export: true
        defaultValue: "falkordb-cluster"
      - key: description
        description: Description of the database
        name: Database Description
        type: String
        modifiable: true
        required: false
        export: true
        defaultValue: "FalkorDB Cluster"
      - key: masterCount
        description: Number of Replicas
        name: Master Count
        type: Float64
        modifiable: true
        required: false
        export: true
        defaultValue: "3"
      - key: replicaCount
        description: Number of Replicas
        name: Replica Count
        type: Float64
        modifiable: true
        required: false
        export: true
        defaultValue: "3"
      - key: nodeInstanceType
        description: Instance Type
        name: Instance Type
        type: String
        modifiable: true
        required: false
        export: true
        defaultValue: "t2.medium"
        options:
          - t2.medium
          - m6i.large
          - m6i.xlarge
          - c6i.xlarge
          - c6i.2xlarge
          - c6i.4xlarge
          - c6i.8xlarge
      - key: enableTLS
        description: Whether to enable TLS for the database
        name: Enable TLS
        type: Boolean
        modifiable: false
        required: true
        export: true
        defaultValue: "false"
      - key: falkordbUser
        description: FalkorDB User
        name: FalkorDB User
        type: String
        modifiable: true
        required: true
        export: true
        defaultValue: "falkordb"
      - key: falkordbPassword
        description: FalkorDB Password
        name: FalkorDB Password
        type: String
        modifiable: true
        required: true
        export: true
      - key: adminPassword
        description: Admin Password
        name: Admin Password
        type: String
        modifiable: false
        required: true
        export: false
        defaultValue: "{{ $func.random(string,16,10) }}"
      - key: replicationPassword
        description: Replication Password
        name: Replication Password
        type: String
        modifiable: false
        required: true
        export: false
        defaultValue: "{{ $func.random(string,16,$sys.deterministicSeedValue) }}"
      - key: RDBPersistenceConfig
        description: How often to save the RDB file to disk. Check the documentation for more information.
        name: RDB Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "low"
        options:
          - "low"
          - "medium"
          - "high"
      - key: AOFPersistenceConfig
        description: Whether to enable AOF persistence. Check the documentation for more information.
        name: AOF Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "everysec"
        options:
          - "everysec"
          - "always"
      - key: falkorDBCacheSize
        description: Choose the cache size for your database
        name: FalkorDB Cache Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "25"
        min: 0
        max: 256
      - key: falkorDBNodeCreationBuffer
        description: Choose the buffer size for your database
        name: FalkorDB Node Creation Buffer
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "16384"
        min: 256
        max: 32768
      - key: falkorDBMaxQueuedQueries
        description: Choose the max queued queries for your database
        name: FalkorDB Max Queued Queries
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "50"
        min: 0
        max: 512
      - key: falkorDBTimeoutMax
        description: Choose the timeout max for your database
        name: FalkorDB Timeout Max
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBTimeoutDefault
        description: Choose the timeout default for your database
        name: FalkorDB Timeout Default
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBResultSetSize
        description: Choose the result set size for your database
        name: FalkorDB Result Set Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "10000"
        min: 0
        max: 1000000
      - key: falkorDBQueryMemCapacity
        description: Choose the query mem capacity for your database
        name: FalkorDB Query Mem Capacity
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 2000000000
      - key: enableDebugCommand
        description: Whether to enable debug command for the database
        name: Enable Debug Command
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: 'disabled'
        labeledOptions:
          enabled: 'yes'
          disabled: 'no'

  - name: cluster-sz
    capabilities:
      enableMultiZone: false
    compute:
      instanceTypes:
        - cloudProvider: aws
          apiParam: nodeInstanceType
        - cloudProvider: gcp
          apiParam: nodeInstanceType
    network:
      ports:
        - 6379
        - 16379
    endpointConfiguration:
      cluster:
        host: "$sys.network.externalClusterEndpoint"
        ports:
          - 6379
        primary: true
        networkingType: PUBLIC
    operatorCRDConfiguration:
      template: |
        apiVersion: redis.redis.opstreelabs.in/v1beta2
        kind: RedisCluster
        metadata:
          name: {{ $var.name }}
          labels:
            app.kubernetes.io/name: {{ $var.name }}
            helm.sh/chart: cluster-0.16.8
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/instance: {{ $var.name }}
            app.kubernetes.io/version: 0.16.5
            app.kubernetes.io/component: middleware
          annotations:
            redisclusters.redis.redis.opstreelabs.in/role-anti-affinity: "true"
            redisclusters.redis.redis.opstreelabs.in/role-anti-affinity-topology-key: "kubernetes.io/hostname"
        spec:
          hostPort: 6379
          clusterSize: 3
          persistenceEnabled: true
          clusterVersion: v7
          redisLeader:
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh liveness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh readiness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            affinity: 
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
                    - key: topology.kubernetes.io/region
                      operator: In
                      values:
                      - {{$sys.deploymentCell.region}}
                    - key: node.kubernetes.io/instance-type
                      operator: In
                      values:
                      - {{$var.nodeInstanceType}}
                    - key: omnistrate.com/resource
                      operator: In
                      values:
                      - {{$sys.deployment.resourceID}}
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: DoNotSchedule
                labelSelector:
                  matchLabels:
                    role: leader
            replicas: {{ $var.masterCount }}
            redisConfig:
              additionalRedisConfig: "{{ $var.name }}-ext-config"
          
          redisFollower:
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh liveness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - |
                  /usr/bin/healthcheck.sh readiness
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            affinity: 
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
                    - key: topology.kubernetes.io/region
                      operator: In
                      values:
                      - {{$sys.deploymentCell.region}}
                    - key: node.kubernetes.io/instance-type
                      operator: In
                      values:
                      - {{$var.nodeInstanceType}}
                    - key: omnistrate.com/resource
                      operator: In
                      values:
                      - {{$sys.deployment.resourceID}}
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: DoNotSchedule
                labelSelector:
                  matchLabels:
                    role: follower
            replicas: {{ $var.replicaCount }}
            redisConfig:
              additionalRedisConfig: "{{ $var.name }}-ext-config"

          redisExporter:
            enabled: true
            image: "falkordb/redis_exporter:v1.68.0"
            imagePullPolicy: "IfNotPresent"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 100m
                memory: 128Mi
            env:
              - name: REDIS_EXPORTER_TLS_CA_CERT_FILE
                value: "/ca/ca.crt"
            
          kubernetesConfig:
            image: "falkordb/redis:latest"
            imagePullPolicy: "IfNotPresent"
            redisSecret:
              name: "redis-secret"
              key: "password"
          storage:
            volumeMount:
              volume:
                - name: ca-certificate
                  secret:
                    secretName: "ca-cert"
              mountPath:
                - mountPath: "/ca"
                  name: "ca-certificate"
                  readOnly: true
            nodeConfVolume: true
            nodeConfVolumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          podSecurityContext: 
            fsGroup: 1000
            runAsUser: 1000
          acl:
            secret:
              secretName: "cluster-acl"
          TLS:
            enabled: {{ $var.enableTLS }}
            ca: "/ca/ca.crt"
            cert: "tls.crt"
            key: "tls.key"
            secret:
              secretName: "falkordb-tls-secret"
          env:
            - name: POD_HOSTNAME
              value: {{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
            - name: TLS_MODE
              value: "{{ $var.enableTLS }}"
            - name: REDIS_TIMEOUT_SECONDS
              value: "5"
            - name: REDIS_TLS_CA_KEY
              value: "/ca/ca.crt"

      supplementalFiles:
        - |
          apiVersion: v1
          stringData:
            password: {{ $var.replicationPassword }}
          kind: Secret
          metadata:
            name: redis-secret
            namespace: {{$sys.id}}
          type: Opaque

        - |
          apiVersion: v1
          stringData:
            user.acl: |
              user {{ $var.falkordbUser }} on >{{ $var.falkordbPassword }} ~* +INFO +CLIENT +DBSIZE +PING +HELLO +AUTH +RESTORE +DUMP +DEL +EXISTS +UNLINK +TYPE +FLUSHALL +TOUCH +EXPIRE +PEXPIREAT +TTL +PTTL +EXPIRETIME +RENAME +RENAMENX +SCAN +DISCARD +EXEC +MULTI +UNWATCH +WATCH +ECHO +SLOWLOG +WAIT +WAITAOF +GRAPH.INFO +GRAPH.LIST +GRAPH.QUERY +GRAPH.RO_QUERY +GRAPH.EXPLAIN +GRAPH.PROFILE +GRAPH.DELETE +GRAPH.CONSTRAINT +GRAPH.SLOWLOG +GRAPH.BULK +GRAPH.CONFIG +CLUSTER +COMMAND
              user default on >{{ $var.replicationPassword }} allchannels +multi +slaveof +ping +exec +subscribe +config|rewrite +role +publish +info +client|setname +client|kill +script|kill +psync +replconf +ping +cluster +dbsize
              user admin on >{{ $var.adminPassword }} ~* +@all
          kind: Secret
          metadata:
            name: cluster-acl
            namespace: {{$sys.id}}
          type: Opaque

        - |
          apiVersion: v1
          data:
            ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          kind: Secret
          metadata:
            name: ca-cert
            namespace: {{$sys.id}}
          type: Opaque
        - |
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: redis-tls
            namespace: {{$sys.id}}
          spec:
            secretName: falkordb-tls-secret
            duration:  2160h # 90d
            renewBefore: 360h # 15d
            issuerRef:
              name: letsencrypt-prod
              kind: ClusterIssuer
            dnsNames:
              - "*.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud"
        
        - |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: {{ $var.name }}-ext-config
            namespace: {{$sys.id}}
            labels:
              app.kubernetes.io/name: {{ $var.name }}
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: {{ $var.name }}
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          data:
            redis-additional.conf: |
              loadmodule /FalkorDB/bin/src/falkordb.so CACHE_SIZE {{ $var.falkorDBCacheSize }} NODE_CREATION_BUFFER {{$var.falkorDBNodeCreationBuffer }} MAX_QUEUED_QUERIES {{$var.falkorDBMaxQueuedQueries}} TIMEOUT_MAX {{ $var.falkorDBTimeoutMax }} TIMEOUT_DEFAULT {{$var.falkorDBTimeoutDefault }} RESULTSET_SIZE {{$var.falkorDBResultSetSize }} QUERY_MEM_CAPACITY {{$var.falkorDBQueryMemCapacity }} VKEY_MAX_ENTITY_COUNT	4611686000000000000
              tls-auth-clients no
              tls-ca-cert-file /ca/ca.crt
              masterauth {{ $var.replicationPassword }}
              masteruser "default"
              cluster-preferred-endpoint-type hostname
              enable-debug-command {{ $var.enableDebugCommand }}
              rename-command FLUSHALL ""
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: redis-cluster-leader-external-service
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{$sys.network.externalClusterEndpoint}}
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              redis_setup_type: cluster
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-0
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-0.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-0
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-1
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-1.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-1
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-leader-2
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-leader-2.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-leader-2
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-0
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-0.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-0
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-1
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-1.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-1
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
        - |
          apiVersion: v1
          kind: Service
          metadata:
            name: {{ $var.name }}-follower-2
            namespace: {{$sys.id}}
            annotations:
              external-dns.alpha.kubernetes.io/hostname: {{ $var.name }}-follower-2.{{ $sys.id }}.hc-vqoxdmrqs.{{ $sys.deploymentCell.region }}.{{ $sys.deploymentCell.cloudProviderName }}.f2e0a955bb84.cloud
              external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP
            labels:
              app.kubernetes.io/name: redis-cluster
              helm.sh/chart: cluster-0.16.8
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/instance: redis-cluster
              app.kubernetes.io/version: 0.16.5
              app.kubernetes.io/component: middleware
          spec:
            clusterIP: None
            selector:
              statefulset.kubernetes.io/pod-name: {{ $var.name }}-follower-2
            ports:
              - protocol: TCP
                port: 6379
                targetPort: 6379
                name: client
              - protocol: TCP
                port: 16379
                targetPort: 16379
                name: gossip
      readinessConditions:
        "$var._crd.status.state": "Ready"
      outputParameters:
        "Status": "$var._crd.status.state"
      helmChartDependencies:
        - chartName: operator
          chartVersion: 0.20.1
          chartRepoName: falkordb-helm
          chartRepoURL: "https://falkordb.github.io/helm-charts/"
          chartValues:
            resources:
              limits:
                cpu: "1"
                memory: 500Mi
              requests:
                cpu: "2"
                memory: 2000Mi
            redisOperator:
              webhook: true
            certmanager:
              enabled: true
            service:
              name: webhook-service
              namespace: default
            

    apiParameters:
      - key: name
        description: Name of the database
        name: Database Name
        type: String
        modifiable: true
        required: true
        export: true
        defaultValue: "falkordb-cluster"
      - key: description
        description: Description of the database
        name: Database Description
        type: String
        modifiable: true
        required: false
        export: true
        defaultValue: "FalkorDB Cluster"
      - key: masterCount
        description: Number of Replicas
        name: Master Count
        type: Float64
        modifiable: true
        required: false
        export: true
        defaultValue: "3"
      - key: replicaCount
        description: Number of Replicas
        name: Replica Count
        type: Float64
        modifiable: true
        required: false
        export: true
        defaultValue: "3"
      - key: nodeInstanceType
        description: Instance Type
        name: Instance Type
        type: String
        modifiable: true
        required: false
        export: true
        defaultValue: "t2.medium"
        options:
          - t2.medium
          - m6i.large
          - m6i.xlarge
          - c6i.xlarge
          - c6i.2xlarge
          - c6i.4xlarge
          - c6i.8xlarge
      - key: enableTLS
        description: Whether to enable TLS for the database
        name: Enable TLS
        type: Boolean
        modifiable: false
        required: true
        export: true
        defaultValue: "false"
      - key: falkordbUser
        description: FalkorDB User
        name: FalkorDB User
        type: String
        modifiable: true
        required: true
        export: true
        defaultValue: "falkordb"
      - key: falkordbPassword
        description: FalkorDB Password
        name: FalkorDB Password
        type: String
        modifiable: true
        required: true
        export: true
      - key: adminPassword
        description: Admin Password
        name: Admin Password
        type: String
        modifiable: false
        required: true
        export: false
        defaultValue: "{{ $func.random(string,16,10) }}"
      - key: replicationPassword
        description: Replication Password
        name: Replication Password
        type: String
        modifiable: false
        required: true
        export: false
        defaultValue: "{{ $func.random(string,16,$sys.deterministicSeedValue) }}"
      - key: RDBPersistenceConfig
        description: How often to save the RDB file to disk. Check the documentation for more information.
        name: RDB Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "low"
        options:
          - "low"
          - "medium"
          - "high"
      - key: AOFPersistenceConfig
        description: Whether to enable AOF persistence. Check the documentation for more information.
        name: AOF Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "everysec"
        options:
          - "everysec"
          - "always"
      - key: falkorDBCacheSize
        description: Choose the cache size for your database
        name: FalkorDB Cache Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "25"
        min: 0
        max: 256
      - key: falkorDBNodeCreationBuffer
        description: Choose the buffer size for your database
        name: FalkorDB Node Creation Buffer
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "16384"
        min: 256
        max: 32768
      - key: falkorDBMaxQueuedQueries
        description: Choose the max queued queries for your database
        name: FalkorDB Max Queued Queries
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "50"
        min: 0
        max: 512
      - key: falkorDBTimeoutMax
        description: Choose the timeout max for your database
        name: FalkorDB Timeout Max
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBTimeoutDefault
        description: Choose the timeout default for your database
        name: FalkorDB Timeout Default
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBResultSetSize
        description: Choose the result set size for your database
        name: FalkorDB Result Set Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "10000"
        min: 0
        max: 1000000
      - key: falkorDBQueryMemCapacity
        description: Choose the query mem capacity for your database
        name: FalkorDB Query Mem Capacity
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 2000000000
      - key: enableDebugCommand
        description: Whether to enable debug command for the database
        name: Enable Debug Command
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: 'disabled'
        labeledOptions:
          enabled: 'yes'
          disabled: 'no'