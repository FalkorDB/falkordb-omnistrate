name: Build and test image

on:
  push:
  workflow_dispatch:

concurrency:
  group: falkordb-node-tests
  cancel-in-progress: false

env:
  IMAGE_NAME: falkordb-node
  FALKORDB_VERSION: v4.0.7

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: FALKORDB_VERSION=${{ env.FALKORDB_VERSION }}
          context: ./falkordb-node
          file: ./falkordb-node/Dockerfile
          push: true
          tags: falkordb/${{ env.IMAGE_NAME }}:dev-${{ github.event.head_commit.id }}

      - name: Notify Google Chat
        id: test-action
        if: failure() # only send notification in case of failure
        uses: SimonScholz/google-chat-action@v1.1.0
        with:
          webhookUrl: "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}"
          jobStatus: ${{ job.status }}
          threadKey: ${{ github.job }}

  omnistrate-update:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        tiers:
          - name: node-sz
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-kIAclNV7Pt
          - name: sentinel-sz
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-jChPv7D4wM
          - name: node-mz
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-A5OTVYi7D8
          - name: sentinel-mz
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-x0nEVUZbIm
          - name: node-s
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-wSJ2umk0E7
          - name: node-f
            serviceId: s-iBKzmR5obS
            serviceApiId: sa-FF7Ckx3VC3
            productTierId: pt-vnVxCsPEcV
            imageConfigId: imgc-FhmFmFh9XF
    steps:
      - name: Update Docker Image Tag on Omnistrate
        id: update-image-config
        uses: omnistrate/update-image-config@v1
        with:
          username: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}
          service-id: ${{ matrix.tiers.serviceId }}
          service-api-id: ${{ matrix.tiers.serviceApiId }}
          product-tier-id: ${{ matrix.tiers.productTierId }}
          image-config-id: ${{ matrix.tiers.imageConfigId }}
          tag: ${{ github.ref_name }}

  promote-pt-version:
    needs: omnistrate-update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./tests/requirements.txt

      - name: Promote PT version
        env: 
          OMNISTRATE_SERVICE_ID: s-iBKzmR5obS
          OMNISTRATE_PRODUCT_TIER_ID: pt-vnVxCsPEcV
        run: |
          python ./tests/promote_pt_version.py ${{ secrets.OMNISTRATE_USERNAME }} ${{ secrets.OMNISTRATE_PASSWORD }} ${{ env.OMNISTRATE_SERVICE_ID }} ${{ env.OMNISTRATE_PRODUCT_TIER_ID }}

  test:
    needs: promote-pt-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instances:
          - name: free
            cloudProvider: gcp
            cloudRegion: europe-west1
            subscriptionId: sub-GJPV3NoNC0
            apiVersion: 2022-09-01-00
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/dev/falkordb-internal-customer-hosted/falkordb-internal-hosted-tier-falkordb-internal-customer-hosted-model-omnistrate-dedicated-tenancy/free
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/dev/falkordb-internal-customer-hosted/falkordb-internal-hosted-tier-falkordb-internal-customer-hosted-model-omnistrate-dedicated-tenancy/node-f
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        working-directory: tests
        run: |
          python -m pip install --upgrade pip
          pip install -r ./tests/requirements.txt

      - name: Run "Free" instance tests
        env:
          CLOUD_PROVIDER: ${{ matrix.instances.cloudProvider }}
          CLOUD_REGION: ${{ matrix.instances.cloudRegion }}
          SUBSCRIPTION_ID: ${{ matrix.instances.subscriptionId }}
          API_VERSION: ${{ matrix.instances.apiVersion }}
          API_PATH: ${{ matrix.instances.apiPath }}
          API_FAILOVER_PATH: ${{ matrix.instances.apiFailoverPath }}
          API_SIGN_IN_PATH: ${{ matrix.instances.apiSignInPath }}
        run: |
          python ./tests/test_free.py ${{ secrets.OMNISTRATE_USERNAME }} ${{ secrets.OMNISTRATE_PASSWORD }} ${{ env.CLOUD_PROVIDER }} ${{ env.CLOUD_REGION }}
