name: Build and release image

on:
  push:
    tags:
      - v*
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: falkordb-node

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./falkordb-node
          file: ./falkordb-node/Dockerfile
          push: true
          tags: falkordb/${{ env.IMAGE_NAME }}:${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/v') && github.ref_name || 'edge'}}, falkordb/${{ env.IMAGE_NAME }}:latest

      - name: Notify Google Chat
        id: test-action
        if: failure() # only send notification in case of failure
        uses: SimonScholz/google-chat-action@v1.1.0
        with:
            webhookUrl: '${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}'
            jobStatus: ${{ job.status }}
            threadKey: ${{ github.job }}
            
  omnistrate-update:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tiers:
          - name: single zone - node
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-ASuaTRt89t
            imageConfigId: imgc-sipNQAPCrB
          - name: single zone - sentinel
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-ASuaTRt89t
            imageConfigId: imgc-9Jg4l6qMB3
          - name: multi zone - node
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-mXEXO8FbRK
            imageConfigId: imgc-9ojJf5CzQh
          - name: multi zone - sentinel
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-mXEXO8FbRK
            imageConfigId: imgc-bmMnLJRayV
          - name: standalone - node
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-FwoqriENVP
            imageConfigId: imgc-ek6aUWWic0
          - name: free - node
            serviceId: s-MdOEhVP7yJ
            serviceApiId: sa-4dTm1SmTgr
            productTierId: pt-CsGAZopuDp
            imageConfigId: imgc-JCucNXPYLS
    steps:
      - name: Update Docker Image Tag on Omnistrate
        uses: omnistrate/update-image-config@v1
        with:
          username: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}
          service-id: ${{ matrix.tiers.serviceId }}
          service-api-id: ${{ matrix.tiers.serviceApiId }}
          product-tier-id: ${{ matrix.tiers.productTierId }}
          image-config-id: ${{ matrix.tiers.imageConfigId }}
          tag: ${{ github.ref_name }}
