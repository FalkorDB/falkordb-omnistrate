name: Build and release image

on:
  push:
    tags:
      - v*
  workflow_dispatch:

concurrency:
  group: falkordb-node-release
  cancel-in-progress: true

env:
  IMAGE_NAME: falkordb-node
  FALKORDB_VERSION: v4.0.8

jobs:
  build-and-push:
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'ARM64' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: FALKORDB_VERSION=${{ env.FALKORDB_VERSION }}
          context: ./falkordb-node
          file: ./falkordb-node/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: falkordb/${{ env.IMAGE_NAME }}:${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/v') && github.ref_name || 'edge'}}, falkordb/${{ env.IMAGE_NAME }}:latest

  omnistrate-update-plans:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        plans:
          - name: FalkorDB
            file: omnistrate.free.yaml
            key: free
          - name: FalkorDB
            file: omnistrate.pro.yaml
            key: pro
    steps:
      - name: Checkout
        if: ${{ contains(vars.OMNISTRATE_RELEASE_PLANS, matrix.plans.key) }}
        uses: actions/checkout@v4

      - name: Replace Variables
        if: ${{ contains(vars.OMNISTRATE_RELEASE_PLANS, matrix.plans.key) }}
        run: |
          sed -i 's/$GcpProjectId/${{ vars.GCP_PROJECT_ID }}/g' ${{ matrix.plans.file }}
          sed -i 's/$GcpProjectNumber/${{ vars.GCP_PROJECT_NUMBER }}/g' ${{ matrix.plans.file }}
          sed -i 's/$GcpServiceAccountEmail/${{ vars.GCP_SERVICE_ACCOUNT_EMAIL }}/g' ${{ matrix.plans.file }}
          sed -i 's/$AwsAccountId/${{ vars.AWS_ACCOUNT_ID }}/g' ${{ matrix.plans.file }}
          sed -i 's|$AwsBootstrapRoleAccountArn|${{ vars.AWS_BOOTSTRAP_ROLE_ACCOUNT_ARN }}|g' ${{ matrix.plans.file }}
          sed -i 's/$FalkorDBNodeImage/falkordb\/falkordb-node:${{ github.ref_name }}/g' ${{ matrix.plans.file }}
    
      - name: Upload yaml to artifacts
        if: ${{ contains(vars.OMNISTRATE_RELEASE_PLANS, matrix.plans.key) }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.plans.file }}
          path: ${{ matrix.plans.file }}


      - name: Update Omnistrate plan
        if: ${{ contains(vars.OMNISTRATE_RELEASE_PLANS, matrix.plans.key) }}
        uses: ./.github/actions/update-omnistrate-plan
        with:
          username: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}
          file: ${{ matrix.plans.file }}
          service-name: ${{ matrix.plans.name }}
          environment: dev
