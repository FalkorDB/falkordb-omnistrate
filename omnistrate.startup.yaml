version: "3.9"

x-omnistrate-service-plan:
  name: "FalkorDB Startup"
  tenancyType: "OMNISTRATE_MULTI_TENANCY"
  deployment:
    hostedDeployment:
      GcpProjectId: "$GcpProjectId"
      GcpProjectNumber: "$GcpProjectNumber"
      GcpServiceAccountEmail: "$GcpServiceAccountEmail"
      AwsAccountId: "$AwsAccountId"
      AwsBootstrapRoleAccountArn: "$AwsBootstrapRoleAccountArn"

x-internal-integrations:
  logs:
    provider: native
  metrics:
    provider: native

x-falkordbMetrics: &metrics
  prometheusEndpoint: "http://localhost:9121/metrics"
  metrics:
    redis_aof_file_size_bytes:
      "AOF File Size (Bytes)":
        aggregationFunction: sum
    redis_commands_latencies_usec_bucket:
      "Command Latency (μs) Bucket":
        aggregationFunction: sum
    redis_commands_latencies_usec_sum:
      "Total Command Latency (μs)":
        aggregationFunction: sum
    redis_commands_latencies_usec_count:
      "Command Latency Count (μs)":
        aggregationFunction: sum
    redis_commands_processed_total:
      "Total Processed Commands":
        aggregationFunction: sum
    redis_commands_rejected_calls_total:
      "Rejected Command Calls":
        aggregationFunction: sum
    redis_commands_total:
      "Total Commands":
        aggregationFunction: sum
    redis_connected_clients:
      "Connected Clients":
        aggregationFunction: sum
    redis_connections_received_total:
      "Total Connections Received":
        aggregationFunction: sum
    redis_db_keys:
      "Database Keys":
        aggregationFunction: sum
    redis_errors_total:
      "Total Errors":
        aggregationFunction: sum
    redis_last_slow_execution_duration_seconds:
      "Last Slow Execution Duration (Seconds)":
        aggregationFunction: sum
    redis_loading_dump_file:
      "Loading Dump File":
        aggregationFunction: sum
    redis_mem_clients_normal:
      "Memory Used By Normal Clients":
        aggregationFunction: sum
      "Memory Used (Bytes)":
        aggregationFunction: sum
    redis_memory_used_dataset_bytes:
      "Memory Used By Dataset (Bytes)":
        aggregationFunction: sum
    redis_rdb_bgsave_in_progress:
      "RDB BGSAVE In Progress":
        aggregationFunction: sum
    redis_rdb_changes_since_last_save:
      "Changes Since Last RDB Save":
        aggregationFunction: sum
    redis_rdb_current_bgsave_duration_sec:
      "Current RDB BGSAVE Duration (Seconds)":
        aggregationFunction: sum
    redis_rdb_last_bgsave_duration_sec:
      "Last RDB BGSAVE Duration (Seconds)":
        aggregationFunction: sum
    redis_rdb_last_cow_size_bytes:
      "Last RDB Copy-On-Write Size (Bytes)":
        aggregationFunction: sum
    redis_rdb_last_load_loaded_keys:
      "Last RDB Load: Loaded Keys":
        aggregationFunction: sum
    redis_rdb_last_save_timestamp_seconds:
      "Last RDB Save Timestamp (Seconds)":
        aggregationFunction: sum
    redis_rdb_saves_total:
      "Total RDB Saves":
        aggregationFunction: sum
    redis_rejected_connections_total:
      "Total Rejected Connections":
        aggregationFunction: sum
    redis_slowlog_last_id:
      "Slow Log Last ID":
        aggregationFunction: sum
    redis_unexpected_error_replies:
      "Unexpected Error Replies":
        aggregationFunction: sum
    redis_uptime_in_seconds:
      "Uptime (Seconds)":
        aggregationFunction: sum

x-omnistrate-integrations:
  - omnistrateLogging:
  - omnistrateMetrics:
      additionalMetrics:
        node-s:
          <<: *metrics

services:
  # Standalone

  Standalone:
    x-omnistrate-mode-internal: false
    image: omnistrate/noop
    x-omnistrate-api-params:
      - key: name
        description: Name
        name: Name
        type: String
        modifiable: true
        required: false
        defaultValue: My favorite database
        export: true
      - key: description
        description: Description
        name: Description
        type: String
        modifiable: true
        required: false
        defaultValue: Description
        export: true
      - key: enableTLS
        description: Whether to enable TLS for the database
        name: Enable TLS
        type: Boolean
        modifiable: false
        required: true
        export: true
        defaultValue: "false"
        parameterDependencyMap:
          node-s: enableTLS
      - key: falkordbUser
        description: Choose a default username for your database
        name: FalkorDB User
        type: String
        modifiable: false
        required: true
        export: true
        defaultValue: "falkordb"
        parameterDependencyMap:
          node-s: falkordbUser
      - key: falkordbPassword
        description: Choose a default password for your database
        name: FalkorDB Password
        type: Password
        modifiable: false
        required: true
        export: false
        parameterDependencyMap:
          node-s: falkordbPassword
      - key: RDBPersistenceConfig
        description: How often to save the RDB file to disk. Check the documentation for more information.
        name: RDB Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "low"
        options:
          - "low"
          - "medium"
          - "high"
        parameterDependencyMap:
          node-s: RDBPersistenceConfig
      - key: AOFPersistenceConfig
        description: Whether to enable AOF persistence. Check the documentation for more information.
        name: AOF Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "everysec"
        options:
          - "everysec"
          - "always"
        parameterDependencyMap:
          node-s: AOFPersistenceConfig
      - key: falkorDBCacheSize
        description: Choose the cache size for your database
        name: FalkorDB Cache Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "25"
        min: 0
        max: 256
        parameterDependencyMap:
          node-s: falkorDBCacheSize
      - key: falkorDBNodeCreationBuffer
        description: Choose the buffer size for your database
        name: FalkorDB Node Creation Buffer
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "16384"
        min: 256
        max: 32768
        parameterDependencyMap:
          node-s: falkorDBNodeCreationBuffer
      - key: falkorDBMaxQueuedQueries
        description: Choose the max queued queries for your database
        name: FalkorDB Max Queued Queries
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "50"
        min: 0
        max: 512
        parameterDependencyMap:
          node-s: falkorDBMaxQueuedQueries
      - key: falkorDBTimeoutMax
        description: Choose the timeout max for your database
        name: FalkorDB Timeout Max
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
        parameterDependencyMap:
          node-s: falkorDBTimeoutMax
      - key: falkorDBTimeoutDefault
        description: Choose the timeout default for your database
        name: FalkorDB Timeout Default
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
        parameterDependencyMap:
          node-s: falkorDBTimeoutDefault
      - key: falkorDBResultSetSize
        description: Choose the result set size for your database
        name: FalkorDB Result Set Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "10000"
        min: 0
        max: 1000000
        parameterDependencyMap:
          node-s: falkorDBResultSetSize
      - key: falkorDBQueryMemCapacity
        description: Choose the query mem capacity for your database
        name: FalkorDB Query Mem Capacity
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 2000000000
        parameterDependencyMap:
          node-s: falkorDBQueryMemCapacity
      - key: memoryRequestsAndLimits
        description: Choose the memory amount for your database
        name: Memory
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "1GB"
        labeledOptions:
          1GB: "1G"
          2GB: "2G"
        parameterDependencyMap:
          node-s: memoryRequestsAndLimits
    x-omnistrate-capabilities:
      backupConfiguration:
        backupRetentionInDays: 7
        backupPeriodInHours: 12
    depends_on:
      - node-s

  node-s:
    x-omnistrate-mode-internal: true
    image: $FalkorDBNodeImage
    x-omnistrate-compute:
      replicaCount: 1
      resourceRequestMemoryAPIParam: memoryRequestsAndLimits
      resourceRequestCPUAPIParam: resourceRequestCPU
      resourceLimitMemoryAPIParam: memoryRequestsAndLimits
      resourceLimitCPUAPIParam: resourceLimitCPU
    x-omnistrate-api-params:
      - key: enableTLS
        description: Whether to enable TLS for the database
        name: Enable TLS
        type: Boolean
        modifiable: false
        required: true
        export: true
        defaultValue: "false"
      - key: falkordbUser
        description: Choose a default username for your database
        name: FalkorDB User
        type: String
        modifiable: false
        required: true
        export: true
        defaultValue: "falkordb"
      - key: falkordbPassword
        description: Choose a default password for your database
        name: FalkorDB Password
        type: Password
        modifiable: false
        required: true
        export: false
      - key: RDBPersistenceConfig
        description: How often to save the RDB file to disk. Check the documentation for more information.
        name: RDB Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "low"
        options:
          - "low"
          - "medium"
          - "high"
      - key: AOFPersistenceConfig
        description: Whether to enable AOF persistence. Check the documentation for more information.
        name: AOF Persistence Config
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "everysec"
        options:
          - "everysec"
          - "always"
      - key: falkorDBCacheSize
        description: Choose the cache size for your database
        name: FalkorDB Cache Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "25"
        min: 0
        max: 256
      - key: falkorDBNodeCreationBuffer
        description: Choose the buffer size for your database
        name: FalkorDB Node Creation Buffer
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "16384"
        min: 256
        max: 32768
      - key: falkorDBMaxQueuedQueries
        description: Choose the max queued queries for your database
        name: FalkorDB Max Queued Queries
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "50"
        min: 0
        max: 512
      - key: falkorDBTimeoutMax
        description: Choose the timeout max for your database
        name: FalkorDB Timeout Max
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBTimeoutDefault
        description: Choose the timeout default for your database
        name: FalkorDB Timeout Default
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 45000
      - key: falkorDBResultSetSize
        description: Choose the result set size for your database
        name: FalkorDB Result Set Size
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "10000"
        min: 0
        max: 1000000
      - key: falkorDBQueryMemCapacity
        description: Choose the query mem capacity for your database
        name: FalkorDB Query Mem Capacity
        type: Float64
        modifiable: false
        required: false
        export: true
        defaultValue: "0"
        min: 0
        max: 2000000000
      - key: memoryRequestsAndLimits
        description: Choose the memory amount for your database
        name: Memory
        type: String
        modifiable: false
        required: false
        export: true
        defaultValue: "1GB"
        labeledOptions:
          1GB: "1G"
          2GB: "2G"
      - key: resourceRequestCPU
        name: CPU Request
        description: CPU Request for the Falkordb instance
        type: String
        modifiable: false
        required: false
        export: false
        defaultValue: "0.2"
      - key: resourceLimitCPU
        name: CPU Limit
        description: CPU Limit for the Falkordb instance
        type: String
        modifiable: false
        required: false
        export: false
        defaultValue: "1"
    volumes:
      - source: ./data
        target: /var/lib/falkordb/data
        type: bind
        x-omnistrate-storage:
          gcp:
            instanceStorageType: GCP::PD_BALANCED
            instanceStorageSizeGi: 20
          aws:
            instanceStorageType: AWS::EBS_GP3
            instanceStorageSizeGi: 20
    secrets:
      - source: adminpasspath
        target: /run/secrets/adminpassword
      - source: falkordbpasspath
        target: /run/secrets/falkordbpassword
    environment:
      - RUN_NODE=1
      - RUN_SENTINEL=0
      - RUN_METRICS=1
      - RUN_HEALTH_CHECK=1
      - BROWSER=0
      - NODE_HOST=$sys.network.node.externalEndpoint
      - NODE_PORT=6379
      - TLS=$var.enableTLS
      - FALKORDB_USER=$var.falkordbUser
      - DATA_DIR=/var/lib/falkordb/data
      - RANDOM_NODE_PORT=$sys.network.node.externalPorts["6379"]
      - MEMORY_LIMIT=$var.memoryRequestsAndLimits
      - ROOT_CA_PATH=/etc/ssl/certs/GlobalSign_Root_CA.pem
      - PERSISTENCE_RDB_CONFIG_INPUT=$var.RDBPersistenceConfig
      - PERSISTENCE_AOF_CONFIG=$var.AOFPersistenceConfig
      - FALKORDB_CACHE_SIZE=$var.falkorDBCacheSize
      - FALKORDB_NODE_CREATION_BUFFER=$var.falkorDBNodeCreationBuffer
      - FALKORDB_MAX_QUEUED_QUERIES=$var.falkorDBMaxQueuedQueries
      - FALKORDB_TIMEOUT_MAX=$var.falkorDBTimeoutMax
      - FALKORDB_TIMEOUT_DEFAULT=$var.falkorDBTimeoutDefault
      - FALKORDB_RESULT_SET_SIZE=$var.falkorDBResultSetSize
      - FALKORDB_QUERY_MEM_CAPACITY=$var.falkorDBQueryMemCapacity
    ports:
      - "6379:6379"
    x-omnistrate-capabilities:
      enableMultiZone: false
      enableEndpointPerReplica: true
    x-omnistrate-actionhooks:
      - scope: NODE
        type: STARTUP_CHECK
        commandTemplate: |
          #!/bin/bash

          STARTUP_CHECK_URL="${STARTUP_CHECK_HOST:-localhost}:${STARTUP_CHECK_PORT:-8081}/startup"
          call_startup_check() {

            echo "Startup check URL: $STARTUP_CHECK_URL"
            curl -sf $STARTUP_CHECK_URL
            
            if [ $? -ne 0 ]; then
              echo "Startup check failed"
              exit 1
            fi
          }

          if [[ ! -z $RUN_HEALTH_CHECK ]] && [[ $RUN_HEALTH_CHECK -eq 1 ]];then
            call_startup_check
          fi
      - scope: NODE
        type: READINESS_CHECK
        commandTemplate: |
          #!/bin/bash

          READINESS_CHECK_URL="${READY_CHECK_HOST:-localhost}:${READY_CHECK_PORT:-8081}/readiness"
          call_readiness_check() {

            echo "Ready check URL: $READINESS_CHECK_URL"
            curl -sf $READINESS_CHECK_URL
            
            if [ $? -ne 0 ]; then
              echo "Readiness check failed"
              exit 1
            fi
          }

          if [[ ! -z $RUN_HEALTH_CHECK ]] && [[ $RUN_HEALTH_CHECK -eq 1 ]];then
            call_readiness_check
          fi

      - scope: NODE
        type: HEALTH_CHECK
        commandTemplate: |
          #!/bin/bash

          LIVENESS_CHECK_URL="${HEALTH_CHECK_HOST:-localhost}:${HEALTH_CHECK_PORT:-8081}/liveness"
          call_liveness_check() {

            echo "Health check URL: $LIVENESS_CHECK_URL"
            curl -sf $LIVENESS_CHECK_URL
            
            if [ $? -ne 0 ]; then
              echo "Health check failed"
              exit 1
            fi
          }

          if [[ ! -z $RUN_HEALTH_CHECK ]] && [[ $RUN_HEALTH_CHECK -eq 1 ]];then
          call_liveness_check
          fi

secrets:
  adminpasspath:
    file: ./secrets/adminpassword
  falkordbpasspath:
    file: ./secrets/falkordbpassword
