name: Build and test image

on:
  push:
  workflow_dispatch:

concurrency:
  group: falkordb-node-branch-${{ github.ref_name }}
  cancel-in-progress: false

env:
  REGISTRY_IMAGE: falkordb/falkordb-node:dev-${{ github.event.head_commit.id }}
  FALKORDB_VERSION: v4.0.8

jobs:
  build-and-push:
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'ARM64' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          build-args: FALKORDB_VERSION=${{ env.FALKORDB_VERSION }}
          context: ./falkordb-node
          file: ./falkordb-node/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{  matrix.platform == 'linux/amd64' && 'amd' || 'arm' }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

  omnistrate-update-plans:
    needs: merge
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        plans:
          - service-name: FalkorDB
            plan-name: FalkorDB Free
            file: omnistrate.free.yaml
            key: free
            tier-name: free-${{ github.ref_name }}
          - service-name: FalkorDB
            plan-name: FalkorDB Pro
            file: omnistrate.pro.yaml
            key: pro
            tier-name: pro-${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Replace Variables
        run: |
          sed -i 's/$GcpProjectId/${{ vars.GCP_PROJECT_ID }}/g' ${{ matrix.plans.file }}
          sed -i 's/$GcpProjectNumber/${{ vars.GCP_PROJECT_NUMBER }}/g' ${{ matrix.plans.file }}
          sed -i 's/$GcpServiceAccountEmail/${{ vars.GCP_SERVICE_ACCOUNT_EMAIL }}/g' ${{ matrix.plans.file }}
          sed -i 's/$AwsAccountId/${{ vars.AWS_ACCOUNT_ID }}/g' ${{ matrix.plans.file }}
          sed -i 's|$AwsBootstrapRoleAccountArn|${{ vars.AWS_BOOTSTRAP_ROLE_ACCOUNT_ARN }}|g' ${{ matrix.plans.file }}
          sed -i 's/$FalkorDBNodeImage/${{ env.REGISTRY_IMAGE }}/g' ${{ matrix.plans.file }}
          sed -i 's/${{ matrix.plans.plan-name }}/${{ matrix.plans.tier-name }}/g' ${{ matrix.plans.file }}

      - name: Upload yaml as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.plans.file }}
          path: ${{ matrix.plans.file }}

      - name: Update Omnistrate plan
        uses: ./.github/actions/update-omnistrate-plan
        id: update_omnistrate_plan
        with:
          username: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}
          file: ${{ matrix.plans.file }}
          service-name: ${{ matrix.plans.service-name }}
          environment: testing

  tests:
    needs: omnistrate-update-plans
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tests:
          ###################### GCP ######################
          - name: Free - GCP/us-central1 - Failover & Persistence
            testFile: test_free.py
            tierName: free-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiVersion: 2022-09-01-00
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/free-${{ github.ref_name }}-customer-hosted/free-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-multi-tenancy/free
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/free-${{ github.ref_name }}-customer-hosted/free-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-multi-tenancy/node-f
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            extraParams: ""
          - name: PRO/Standalone - GCP/us-central1 - Failover & Persistence
            testFile: test_standalone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/node-s
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <tls>
            extraParams: "e2-custom-4-8192 30 false"
          - name: PRO/SingleZone - GCP/us-central1 - Failover & Persistence
            testFile: test_single_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "e2-custom-4-8192 30 2 false"
          - name: PRO/MultiZone - GCP/us-central1 - Failover & Persistence
            testFile: test_multi_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/multi-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "e2-custom-4-8192 30 2 false"
          - name: PRO/Standalone - GCP/us-central1 - Failover & Persistence With TLS
            testFile: test_standalone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/node-s
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <tls>
            extraParams: "e2-custom-4-8192 30 true"
          - name: PRO/SingleZone - GCP/us-central1 - Failover & Persistence With TLS
            testFile: test_single_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "e2-custom-4-8192 30 2 true"
          - name: PRO/MultiZone - GCP/us-central1 - Failover & Persistence With TLS
            testFile: test_multi_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/multi-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "e2-custom-4-8192 30 2 true"
          - name: PRO/Standalone - GCP/us-central1 - Update Memory
            testFile: test_update_memory.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <instance_type_new> <tls>
            extraParams: "e2-custom-4-8192 30 e2-custom-8-16384 false"
          - name: PRO/SingleZone - GCP/us-central1 - Update Memory
            testFile: test_update_memory.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: gcp
            cloudRegion: us-central1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <instance_type_new> <tls>
            extraParams: "e2-custom-4-8192 30 e2-custom-8-16384 false"
          ###################### AWS ######################
          - name: PRO/Standalone - AWS/us-east-1 - Failover & Persistence
            testFile: test_standalone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/node-s
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <tls>
            extraParams: "c6g.xlarge 30 false"
          - name: PRO/SingleZone - AWS/us-east-1 - Failover & Persistence
            testFile: test_single_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "c6g.xlarge 30 2 false"
          - name: PRO/MultiZone - AWS/us-east-1 - Failover & Persistence
            testFile: test_multi_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/multi-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "c6g.xlarge 30 2 false"
          - name: PRO/Standalone - AWS/us-east-1 - Failover & Persistence With TLS
            testFile: test_standalone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/node-s
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <tls>
            extraParams: "c6g.xlarge 30 true"
          - name: PRO/SingleZone - AWS/us-east-1 - Failover & Persistence With TLS
            testFile: test_single_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "c6g.xlarge 30 2 true"
          - name: PRO/MultiZone - AWS/us-east-1 - Failover & Persistence With TLS
            testFile: test_multi_zone.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/multi-Zone
            apiFailoverPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <replica_count> <tls>
            extraParams: "c6g.xlarge 30 2 true"
          - name: PRO/Standalone - AWS/us-east-1 - Update Memory
            testFile: test_update_memory.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/standalone
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <instance_type_new> <tls>
            extraParams: "c6g.xlarge 30 c6g.2xlarge false"
          - name: PRO/SingleZone - AWS/us-east-1 - Update Memory
            testFile: test_update_memory.py
            tierName: pro-${{ github.ref_name }}
            cloudProvider: aws
            cloudRegion: us-east-1
            subscriptionId: sub-GJPV3NoNC0
            apiPath: 2022-09-01-00/resource-instance/sp-JvkxkPhinN/falkordb/v1/testing/pro-${{ github.ref_name }}-customer-hosted/pro-${{ github.ref_name }}-falkordb-customer-hosted-model-omnistrate-dedicated-tenancy/single-Zone
            apiSignInPath: 2022-09-01-00/resource-instance/user/signin
            # extraParams: <instance_size> <disk_size> <instance_type_new> <tls>
            extraParams: "c6g.xlarge 30 c6g.2xlarge false"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./tests/requirements.txt

      - name: ${{ matrix.tests.name }}
        env:
          CLOUD_PROVIDER: ${{ matrix.tests.cloudProvider }}
          CLOUD_REGION: ${{ matrix.tests.cloudRegion }}
          SUBSCRIPTION_ID: ${{ matrix.tests.subscriptionId }}
          API_VERSION: ${{ matrix.tests.apiVersion }}
          API_PATH: ${{ matrix.tests.apiPath }}
          API_FAILOVER_PATH: ${{ matrix.tests.apiFailoverPath }}
          API_SIGN_IN_PATH: ${{ matrix.tests.apiSignInPath }}
          REF_NAME: ${{ matrix.tests.tierName }}
          extraParams: ${{ matrix.tests.extraParams }}
        run: |
          python ./tests/${{ matrix.tests.testFile }} ${{ secrets.OMNISTRATE_USERNAME }} ${{ secrets.OMNISTRATE_PASSWORD }} ${{ env.CLOUD_PROVIDER }} ${{ env.CLOUD_REGION }} ${{ env.extraParams }}
